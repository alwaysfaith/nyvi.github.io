<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[SpringBoot之lombok]]></title>
      <url>%2F201704%2FSpringBoot%2F</url>
      <content type="text"></content>
    </entry>

    
    <entry>
      <title><![CDATA[SpringBoot之lombok]]></title>
      <url>%2F201704%2FSpringBoot%E4%B9%8Blombok%2F</url>
      <content type="text"><![CDATA[简介虽然Lombok也用到了注解，但是它并没有用到反射，而是通过一些奇淫巧技，在代码编译时期动态将注解替换为具体的代码。所以JVM实际运行的代码，和我们手动编写的包含了各种工具方法的类相同。 注解介绍 val - 终级解决方案！简化 final 局部变量定义。 @NonNull - 或者：了解我是怎样停止担心并爱上 NullPointerException 的。 @Cleanup - 怎么资源管理：方便而安全地调用 close() 方法。 @Getter / @Setter - 不再需要写像 public int getFoo() {return foo;} 这样的代码。 @ToString - 不用启动debug就能观察字段值：让 Lombok 为你生成 toString！ @EqualsAndHashCode - 让equal变得容易：在项目中由字段实现 hashCode 和 equals。 @NoArgsConstructor, @RequiredArgsConstructor and @AllArgsConstructor - 定制构造器：生成无参构造函数，对每个 final/非空 字段产生构造器，全参构造函数。 @Data - 它合并所有注解：相当于对所有字段应用 @ToString、@EqualsAndHashCode、@Getter，并对所有非 final 字段应用 @Setter，以及应用 @RequiredArgsConstructor！ @Value - 简单创意不可变类。 @Builder - … 一切都很简单：简单直接地创建对象的 API！ @SneakyThrows - 大胆的抛出以前不能轻易抛出的异常！ @Synchronized - 正确的同步：不要暴露你的锁。 @Getter(lazy=true) - 懒加载是种美德！ @Log - 打印log也是一种美德！ 安装IDEA安装lombok插件很简单File-&gt;Setting-&gt;Plugins-&gt;Browse repositories… 搜索lombok然后点击Install就OK了。 导包1234&lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt;&lt;/dependency&gt; 接下就可以尽情体验lombok带来的便利了。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[SpringBoot之HelloWorld]]></title>
      <url>%2F201704%2FSpringBoot%E4%B9%8BHelloWorld%2F</url>
      <content type="text"><![CDATA[SpringBootSpring 框架作为目前非常流行的一个 Java 应用开发框架，它所包含的内容是非常繁多的。Spring 框架包含几十个不同的子项目，涵盖应用开发的不同方面。要在这些子项目之间进行选择，并快速搭建一个可以运行的应用是比较困难的事情。Spring Boot 的目的在于快速创建可以独立运行的 Spring 应用。通过 Spring Boot 可以根据相应的模板快速创建应用并运行。Spring Boot 可以自动配置 Spring 的各种组件，并不依赖代码生成和 XML 配置文件。Spring Boot 可以大大提升使用 Spring 框架时的开发效率。 中心思想约定优于配置 特点 创建独立的Spring应用程序 直接嵌入 Tomcat 或 Jetty 服务器，不需要部署 WAR 文件。 提供推荐的基础 POM 文件来简化 Maven 配置。 尽可能的根据项目依赖来自动配置 Spring 框架。 提供可以直接在生产环境中使用的功能，如性能指标、应用信息和应用健康检查。 没有代码生成，也没有 XML 配置文件。 写一个HelloWorld 创建一个maven项目 在pom.xml文件添加 123456789101112131415161718192021222324&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;com.springboot&lt;/groupId&gt; &lt;artifactId&gt;springboot&lt;/artifactId&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; &lt;parent&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt; &lt;version&gt;1.5.2.RELEASE&lt;/version&gt; &lt;/parent&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;/project&gt; 创建程序入口 1234567891011121314151617181920package com.springboot;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;@RestController@SpringBootApplicationpublic class Application &#123; @RequestMapping(&quot;/&quot;) String helloWorld() &#123; return &quot;Hello World!&quot;; &#125; public static void main(String[] args) &#123; SpringApplication.run(Application.class, args); &#125;&#125; 见证奇迹的时刻右击运行 Application 程序浏览器输入:http://localhost:8080 就会输出 Hello World!]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Eclipse配置Maven仓库]]></title>
      <url>%2F201703%2FEclipse%E9%85%8D%E7%BD%AEMaven%E4%BB%93%E5%BA%93%2F</url>
      <content type="text"><![CDATA[WhyEclipse有自带Maven仓库,但它配置的国外的Maven仓库。平时下载jar包的速度实在是太慢,还经常下不成功, 所以想配一个国内的Maven库。 How下载从Apache官网下载最新版的Maven，并解压到安装目录。 配置配置阿里的Maven库, 配置settings.xml修改 conf 下的settings.xml:123456789101112131415161718192021222324252627282930313233&lt;localRepository&gt;E:/Repository&lt;/localRepository&gt;&lt;profiles&gt; &lt;profile&gt; &lt;id&gt;Nexus aliyun&lt;/id&gt; &lt;repositories&gt; &lt;repository&gt; &lt;id&gt;Nexus aliyun&lt;/id&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;/snapshots&gt; &lt;/repository&gt; &lt;/repositories&gt; &lt;pluginRepositories&gt; &lt;pluginRepository&gt; &lt;id&gt;Nexus aliyun&lt;/id&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;/snapshots&gt; &lt;/pluginRepository&gt; &lt;/pluginRepositories&gt; &lt;/profile&gt;&lt;/profiles&gt;&lt;activeProfiles&gt; &lt;activeProfile&gt;Nexus aliyun&lt;/activeProfile&gt;&lt;/activeProfiles&gt; 配置环境变量计算机右击属性-&gt;高级系统设置-&gt;环境变量在系统变量下的Path添加 D:\develop\apache-maven-3.3.9\bin; 配置Eclipse Window-&gt;Preferences-&gt;Maven-&gt;User Settings What 从此之后妈妈再也不用担心我下载jar慢啦！！！]]></content>
    </entry>

    
  
  
</search>
