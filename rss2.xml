<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>NYVI的博客</title>
    <link>http://www.enheng.cc/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>所有的进步都是不稳定, 一个问题解决了 &lt;br/&gt;又不得不面对一个新的问题</description>
    <pubDate>Sun, 02 Jul 2017 23:29:47 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>SpringCache整合Redis实现自定义缓存时间</title>
      <link>http://www.enheng.cc/201707/SpringCache%E6%95%B4%E5%90%88Redis%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BC%93%E5%AD%98%E6%97%B6%E9%97%B4/</link>
      <guid>http://www.enheng.cc/201707/SpringCache%E6%95%B4%E5%90%88Redis%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BC%93%E5%AD%98%E6%97%B6%E9%97%B4/</guid>
      <pubDate>Sun, 02 Jul 2017 06:12:43 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Spring-Cache简介&quot;&gt;&lt;a href=&quot;#Spring-Cache简介&quot; class=&quot;headerlink&quot; title=&quot;Spring Cache简介&quot;&gt;&lt;/a&gt;Spring Cache简介&lt;/h2&gt;&lt;p&gt;Spring3.1开始引入了的基于注释(an
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="Spring-Cache简介"><a href="#Spring-Cache简介" class="headerlink" title="Spring Cache简介"></a>Spring Cache简介</h2><p>Spring3.1开始引入了的基于注释(annotation)的缓存(cache)技术，它本质上不是一个具体的缓存实现方案，而是一个对缓存使用的抽象，通过在既有代码中添加注解，即能够达到缓存方法的返回对象的效果。</p>
<p>Spring 的缓存技术还具备相当的灵活性，不仅能够使用 SpEL 来定义缓存的 key 和各种 condition，还提供开箱即用的缓存临时存储方案，也支持和主流的专业缓存例如 Redis 集成。</p>
<h3 id="Cacheable"><a href="#Cacheable" class="headerlink" title="@Cacheable"></a>@Cacheable</h3><p>这个用的比较多，用在查询方法上，先从缓存中读取，如果缓存不存在再调用该方法获取数据，然后把返回的数据添加到缓存中去。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@Cacheable(value = &quot;userCache&quot;, key = &quot;targetClass + &apos;.&apos; + methodName + &apos;.&apos; + &quot;#userid&quot;)</div><div class="line">public User getEntity(long userid) &#123;</div><div class="line">  // 业务代码省略</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="CacheEvict"><a href="#CacheEvict" class="headerlink" title="@CacheEvict"></a>@CacheEvict</h3><p>清楚缓存<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@CacheEvict(value = &quot;userCache&quot;, key = &quot;targetClass + &apos;.&apos; + methodName + &apos;.&apos; + &quot;#userid&quot;)</div><div class="line">public boolean delete(long userid) &#123;</div><div class="line">  // 业务代码省略</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="CachePut"><a href="#CachePut" class="headerlink" title="@CachePut"></a>@CachePut</h3><p>这个注释可以确保方法被执行，同时方法的返回值也被记录到缓存中，实现缓存与数据库的同步更新。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@CachePut(value = &quot;userCache&quot;, key = &quot;targetClass + &apos;.&apos; + methodName + &apos;.&apos; + &quot;#user.getUserid&quot;)</div><div class="line">public User save(User user) &#123;</div><div class="line">  // 业务代码省略</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>注：每个注解都有多个参数，这里不一一列出，建议进入源码查看注释。</p>
<h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><p>虽然Spring Cache用起来很方便的, 但不支持设置动态过期时间,这里需要重写RedisCacheManager的一些方法。</p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>这里用的spring对redis的封装spring-data-redis，主要是对RedisCacheManager做一个二次封装。</p>
<h3 id="导包"><a href="#导包" class="headerlink" title="导包"></a>导包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">    &lt;groupId&gt;redis.clients&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;jedis&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;2.9.0&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div><div class="line">&lt;dependency&gt;</div><div class="line">    &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;spring-data-redis&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;1.8.4.RELEASE&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure>
<h3 id="重写-RedisCacheManager"><a href="#重写-RedisCacheManager" class="headerlink" title="重写 RedisCacheManager"></a>重写 RedisCacheManager</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.demo.cache;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.Objects;</div><div class="line"><span class="keyword">import</span> java.util.regex.Pattern;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.script.ScriptEngine;</div><div class="line"><span class="keyword">import</span> javax.script.ScriptEngineManager;</div><div class="line"><span class="keyword">import</span> javax.script.ScriptException;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.apache.commons.lang3.math.NumberUtils;</div><div class="line"><span class="keyword">import</span> org.springframework.data.redis.cache.RedisCache;</div><div class="line"><span class="keyword">import</span> org.springframework.data.redis.cache.RedisCacheManager;</div><div class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisOperations;</div><div class="line"></div><div class="line"><span class="keyword">import</span> lombok.extern.log4j.Log4j2;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 重写redis缓存管理器</div><div class="line"> * &lt;p&gt;</div><div class="line"> * 重写 RedisCacheManager createCache 方法</div><div class="line"> * &lt;p&gt;</div><div class="line"> * 在缓存名字上添加过期时间表达式 如:cachename#60*60</div><div class="line"> * <span class="doctag">@author</span> czk</div><div class="line"> */</div><div class="line"><span class="meta">@Log</span>4j2</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExtendedRedisCacheManager</span> <span class="keyword">extends</span> <span class="title">RedisCacheManager</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ScriptEngine scriptEngine = <span class="keyword">new</span> ScriptEngineManager().getEngineByName(<span class="string">"JavaScript"</span>);</div><div class="line"></div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Pattern pattern = Pattern.compile(<span class="string">"[+\\-*/%]"</span>);</div><div class="line">	</div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 分隔符</div><div class="line">	 */</div><div class="line">	<span class="keyword">private</span> <span class="keyword">char</span> separator = <span class="string">'#'</span>;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">ExtendedRedisCacheManager</span><span class="params">(@SuppressWarnings(<span class="string">"rawtypes"</span>)</span> RedisOperations redisOperations) </span>&#123;</div><div class="line">	    <span class="keyword">super</span>(redisOperations);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</div><div class="line">	<span class="function"><span class="keyword">protected</span> RedisCache <span class="title">createCache</span><span class="params">(String cacheName)</span> </span>&#123;</div><div class="line">	    <span class="comment">// 获取默认时间</span></div><div class="line">	    <span class="keyword">long</span> expiration = computeExpiration(cacheName);		</div><div class="line">	    <span class="keyword">int</span> index = cacheName.indexOf(<span class="keyword">this</span>.getSeparator());</div><div class="line">	    <span class="keyword">if</span> (index &gt; <span class="number">0</span>) &#123;</div><div class="line">	        expiration = getExpiration(cacheName, index, expiration);</div><div class="line">	    &#125;</div><div class="line">	    <span class="keyword">return</span> <span class="keyword">new</span> RedisCache(cacheName, (isUsePrefix() ? getCachePrefix().prefix(cacheName) : <span class="keyword">null</span>),</div><div class="line">		        getRedisOperations(), expiration);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 计算缓存时间</div><div class="line">	 * <span class="doctag">@param</span> name 缓存名字 cache#60*60</div><div class="line">	 * <span class="doctag">@param</span> separatorIndex 分隔符位置</div><div class="line">	 * <span class="doctag">@param</span> defalutExp 默认缓存时间</div><div class="line">	 * <span class="doctag">@return</span></div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">long</span> <span class="title">getExpiration</span><span class="params">(<span class="keyword">final</span> String name, <span class="keyword">final</span> <span class="keyword">int</span> separatorIndex, <span class="keyword">final</span> <span class="keyword">long</span> defalutExp)</span> </span>&#123;</div><div class="line">	    Long expiration = <span class="keyword">null</span>;</div><div class="line">	    String expirationAsString = name.substring(separatorIndex + <span class="number">1</span>);</div><div class="line">	    <span class="keyword">try</span> &#123;</div><div class="line">	        <span class="keyword">if</span> (pattern.matcher(expirationAsString).find()) &#123;</div><div class="line">	            expiration = NumberUtils.toLong(scriptEngine.eval(expirationAsString).toString(), defalutExp);</div><div class="line">	        &#125; <span class="keyword">else</span> &#123;</div><div class="line">	            expiration = NumberUtils.toLong(expirationAsString, defalutExp);</div><div class="line">	        &#125;</div><div class="line">	    &#125; <span class="keyword">catch</span> (ScriptException e) &#123;</div><div class="line">	        log.error(<span class="string">"缓存时间转换错误:&#123;&#125;,异常:&#123;&#125;"</span>, name, e.getMessage());</div><div class="line">	    &#125;</div><div class="line">	    <span class="keyword">return</span> Objects.nonNull(expiration) ? expiration.longValue() : defalutExp;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">char</span> <span class="title">getSeparator</span><span class="params">()</span> </span>&#123;</div><div class="line">	    <span class="keyword">return</span> separator;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSeparator</span><span class="params">(<span class="keyword">char</span> separator)</span> </span>&#123;</div><div class="line">	    <span class="keyword">this</span>.separator = separator;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="spring-redis-xml配置文件"><a href="#spring-redis-xml配置文件" class="headerlink" title="spring-redis.xml配置文件"></a>spring-redis.xml配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class="line">	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:p=&quot;http://www.springframework.org/schema/p&quot;</div><div class="line">	xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</div><div class="line">	xmlns:cache=&quot;http://www.springframework.org/schema/cache&quot;</div><div class="line">	xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans      </div><div class="line">                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd      </div><div class="line">                        http://www.springframework.org/schema/context      </div><div class="line">                        http://www.springframework.org/schema/context/spring-context-4.3.xsd      </div><div class="line">                        http://www.springframework.org/schema/cache   </div><div class="line">                        http://www.springframework.org/schema/cache/spring-cache-4.3.xsd&quot;&gt;</div><div class="line">	</div><div class="line">	&lt;context:property-placeholder location=&quot;classpath:redis.properties&quot; /&gt;    </div><div class="line">	</div><div class="line">	&lt;!-- 启用缓存注解功能,否则注解不会生效 --&gt;</div><div class="line">	&lt;cache:annotation-driven cache-manager=&quot;cacheManager&quot; /&gt;</div><div class="line"></div><div class="line">	&lt;!-- redis 相关配置 --&gt;</div><div class="line">	&lt;bean id=&quot;poolConfig&quot; class=&quot;redis.clients.jedis.JedisPoolConfig&quot;&gt;</div><div class="line">	    &lt;property name=&quot;maxIdle&quot; value=&quot;$&#123;redis.maxIdle&#125;&quot; /&gt;</div><div class="line">	    &lt;property name=&quot;maxWaitMillis&quot; value=&quot;$&#123;redis.maxWait&#125;&quot; /&gt;</div><div class="line">	    &lt;property name=&quot;testOnBorrow&quot; value=&quot;$&#123;redis.testOnBorrow&#125;&quot; /&gt;</div><div class="line">	&lt;/bean&gt;</div><div class="line"></div><div class="line">	&lt;bean id=&quot;jedisConnectionFactory&quot; class=&quot;org.springframework.data.redis.connection.jedis.JedisConnectionFactory&quot;</div><div class="line">	    p:host-name=&quot;$&#123;redis.host&#125;&quot; p:port=&quot;$&#123;redis.port&#125;&quot; p:password=&quot;$&#123;redis.password&#125;&quot;</div><div class="line">	    p:database=&quot;$&#123;redis.database&#125;&quot; p:timeout=&quot;$&#123;redis.timeout&#125;&quot;</div><div class="line">	    p:pool-config-ref=&quot;poolConfig&quot; /&gt;</div><div class="line"></div><div class="line">	&lt;bean id=&quot;redisTemplate&quot; class=&quot;org.springframework.data.redis.core.RedisTemplate&quot;&gt;</div><div class="line">	    &lt;property name=&quot;connectionFactory&quot; ref=&quot;jedisConnectionFactory&quot; /&gt;</div><div class="line">	    &lt;!--对key的序列化器 --&gt;</div><div class="line">	    &lt;property name=&quot;keySerializer&quot;&gt;</div><div class="line">	        &lt;bean class=&quot;org.springframework.data.redis.serializer.StringRedisSerializer&quot; /&gt;</div><div class="line">	    &lt;/property&gt;</div><div class="line">	    &lt;!--是对value的列化器 默认:JdkSerializationRedisSerializer --&gt;</div><div class="line">	    &lt;property name=&quot;valueSerializer&quot;&gt;</div><div class="line">	        &lt;bean class=&quot;org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer&quot; /&gt;</div><div class="line">	    &lt;/property&gt;	</div><div class="line">	&lt;/bean&gt;</div><div class="line"></div><div class="line">	&lt;!-- 扩展RedisCacheManager --&gt;</div><div class="line">	&lt;bean id=&quot;cacheManager&quot; class=&quot;com.demo.cache.ExtendedRedisCacheManager&quot;&gt;</div><div class="line">	    &lt;constructor-arg ref=&quot;redisTemplate&quot; /&gt;</div><div class="line">	    &lt;!-- 是否使用前缀 默认: --&gt;</div><div class="line">	    &lt;property name=&quot;usePrefix&quot; value=&quot;true&quot; /&gt;</div><div class="line">	    &lt;!-- 默认有效期1h (60 * 60 = 3600秒) --&gt;</div><div class="line">	    &lt;property name=&quot;defaultExpiration&quot; value=&quot;3600&quot; /&gt;</div><div class="line">	&lt;/bean&gt;</div><div class="line"></div><div class="line">&lt;/beans&gt;</div></pre></td></tr></table></figure>
<h3 id="redis-properties"><a href="#redis-properties" class="headerlink" title="redis.properties"></a>redis.properties</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">#redis 缓存配置</div><div class="line">redis.host=127.0.0.1</div><div class="line">redis.port=6379</div><div class="line">redis.password=</div><div class="line">redis.database=0</div><div class="line"># 控制一个pool最多有多少个状态为idle(空闲的)的jedis实例  </div><div class="line">redis.maxIdle=300</div><div class="line">redis.maxctive=6000</div><div class="line"># 表示当borrow(引入)一个jedis实例时,最大的等待时间,如果超过等待时间(毫秒),则直接抛出JedisConnectionException； </div><div class="line">redis.maxWait=10000</div><div class="line">#在borrow一个jedis实例时,是否提前进行validate操作;如果为true,则得到的jedis实例均是可用的    </div><div class="line">redis.testOnBorrow=true</div><div class="line">#读超时时间</div><div class="line">redis.timeout=30000</div></pre></td></tr></table></figure>
<p>注: Spring Cache是采用AOP来管理缓存，所有通过this调用的方法多不会触发缓存，key采用的是StringRedisSerializer序列化，所有key必须为String类型。</p>
<h3 id="Cacheable指定缓存5分钟"><a href="#Cacheable指定缓存5分钟" class="headerlink" title="@Cacheable指定缓存5分钟"></a>@Cacheable指定缓存5分钟</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@Cacheable(value = &quot;userCache#60*5&quot;, key = &quot;targetClass + &apos;.&apos; + methodName + &apos;.&apos; + &quot;#userid&quot;)</div><div class="line">public User getEntity(long userid) &#123;</div><div class="line">  // 业务代码省略</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://www.enheng.cc/201707/SpringCache%E6%95%B4%E5%90%88Redis%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BC%93%E5%AD%98%E6%97%B6%E9%97%B4/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CentOS安装JDK</title>
      <link>http://www.enheng.cc/201705/CentOS%E5%AE%89%E8%A3%85JDK/</link>
      <guid>http://www.enheng.cc/201705/CentOS%E5%AE%89%E8%A3%85JDK/</guid>
      <pubDate>Tue, 23 May 2017 12:52:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;本想安安静静的做一个开发攻城狮的，但事与愿违，兼职干运维。&lt;br&gt;身为一个Java攻城狮运维第一步必须要从装JDK开始。&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>本想安安静静的做一个开发攻城狮的，但事与愿违，兼职干运维。<br>身为一个Java攻城狮运维第一步必须要从装JDK开始。<br><a id="more"></a></p>
<h2 id="源码包准备"><a href="#源码包准备" class="headerlink" title="源码包准备"></a>源码包准备</h2><p>首先到<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="external">官网</a>下载jdk，我下载的是jdk-8u131-linux-x64.tar.gz，放到/usr/local/java目录下。</p>
<h2 id="解压源码包"><a href="#解压源码包" class="headerlink" title="解压源码包"></a>解压源码包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost java]# tar xvf jdk-8u131-linux-x64.tar.gz</div></pre></td></tr></table></figure>
<h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost java]# vim /etc/profile</div></pre></td></tr></table></figure>
<p>找个空白地方添加配置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#java环境变量</div><div class="line">export JAVA_HOME=/usr/local/java/jdk1.8.0_131  </div><div class="line">export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/tools.jar  </div><div class="line">export PATH=$PATH:$JAVA_HOME/bin</div></pre></td></tr></table></figure></p>
<p>保存退出，并运行source /etc/profile让配置生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost java]# source /etc/profile</div></pre></td></tr></table></figure></p>
<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>输入java -version 如果出现下面的结果代表安装成功了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@localhost java]# java -version</div><div class="line">java version &quot;1.8.0_131&quot;  </div><div class="line">Java(TM) SE Runtime Environment (build 1.8.0_131-b11)  </div><div class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)</div></pre></td></tr></table></figure></p>
<h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>CentOS默认自带vi，功能没vim丰富，所以安装vim取代vi。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost /]# yum -y install vim-enhanced</div></pre></td></tr></table></figure></p>
<p>最后不要忘记删除jdk源码包，占空间<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost java]# rm jdk-8u131-linux-x64.tar.gz</div></pre></td></tr></table></figure></p>
]]></content:encoded>
      
      <comments>http://www.enheng.cc/201705/CentOS%E5%AE%89%E8%A3%85JDK/#disqus_thread</comments>
    </item>
    
    <item>
      <title>SpringBoot之lombok</title>
      <link>http://www.enheng.cc/201704/SpringBoot%E4%B9%8Blombok/</link>
      <guid>http://www.enheng.cc/201704/SpringBoot%E4%B9%8Blombok/</guid>
      <pubDate>Sun, 09 Apr 2017 11:52:55 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;虽然Lombok也用到了注解，但是它并没有用到反射，而是通过一些奇淫巧技，在代码编译时期动态将注解替换为具体的代码。所以JVM实际运行的代码，和我们手动编写的包含了各种工具方法的类相同。&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>虽然Lombok也用到了注解，但是它并没有用到反射，而是通过一些奇淫巧技，在代码编译时期动态将注解替换为具体的代码。所以JVM实际运行的代码，和我们手动编写的包含了各种工具方法的类相同。<br><a id="more"></a></p>
<h2 id="注解介绍"><a href="#注解介绍" class="headerlink" title="注解介绍"></a>注解介绍</h2><ul>
<li><a href="https://projectlombok.org/features/val.html" target="_blank" rel="external">val</a> - 终级解决方案！简化 final 局部变量定义。</li>
<li><a href="https://projectlombok.org/features/NonNull.html" target="_blank" rel="external">@NonNull</a> - 或者：了解我是怎样停止担心并爱上 NullPointerException 的。</li>
<li><a href="https://projectlombok.org/features/Cleanup.html" target="_blank" rel="external">@Cleanup</a> - 怎么资源管理：方便而安全地调用 close() 方法。</li>
<li><a href="https://projectlombok.org/features/GetterSetter.html" target="_blank" rel="external">@Getter / @Setter</a> - 不再需要写像 public int getFoo() {return foo;} 这样的代码。</li>
<li><a href="https://projectlombok.org/features/ToString.html" target="_blank" rel="external">@ToString</a> - 不用启动debug就能观察字段值：让 Lombok 为你生成 toString！</li>
<li><a href="https://projectlombok.org/features/EqualsAndHashCode.html" target="_blank" rel="external">@EqualsAndHashCode</a> - 让equal变得容易：在项目中由字段实现 hashCode 和 equals。</li>
<li><a href="https://projectlombok.org/features/Constructor.html" target="_blank" rel="external">@NoArgsConstructor, @RequiredArgsConstructor and @AllArgsConstructor</a> - 定制构造器：生成无参构造函数，对每个 final/非空 字段产生构造器，全参构造函数。</li>
<li><a href="https://projectlombok.org/features/Data.html" target="_blank" rel="external">@Data</a> - 它合并所有注解：相当于对所有字段应用 @ToString、@EqualsAndHashCode、@Getter，并对所有非 final 字段应用 @Setter，以及应用 @RequiredArgsConstructor！</li>
<li><a href="https://projectlombok.org/features/Value.html" target="_blank" rel="external">@Value</a>  - 简单创意不可变类。</li>
<li><a href="https://projectlombok.org/features/Builder.html" target="_blank" rel="external">@Builder</a> - … 一切都很简单：简单直接地创建对象的 API！</li>
<li><a href="https://projectlombok.org/features/SneakyThrows.html" target="_blank" rel="external">@SneakyThrows</a> - 大胆的抛出以前不能轻易抛出的异常！</li>
<li><a href="https://projectlombok.org/features/Synchronized.html" target="_blank" rel="external">@Synchronized</a>  - 正确的同步：不要暴露你的锁。</li>
<li><a href="https://projectlombok.org/features/GetterLazy.html" target="_blank" rel="external">@Getter(lazy=true)</a> - 懒加载是种美德！</li>
<li><a href="https://projectlombok.org/features/Log.html" target="_blank" rel="external">@Log</a> - 打印log也是一种美德！</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>IDEA安装lombok插件很简单<br>File-&gt;Setting-&gt;Plugins-&gt;Browse repositories…  搜索lombok然后点击Install就OK了。</p>
<h2 id="导包"><a href="#导包" class="headerlink" title="导包"></a>导包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">	&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</div><div class="line">	&lt;artifactId&gt;lombok&lt;/artifactId&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure>
<p>接下就可以尽情体验lombok带来的便利了。</p>
]]></content:encoded>
      
      <comments>http://www.enheng.cc/201704/SpringBoot%E4%B9%8Blombok/#disqus_thread</comments>
    </item>
    
    <item>
      <title>SpringBoot之HelloWorld</title>
      <link>http://www.enheng.cc/201704/SpringBoot%E4%B9%8BHelloWorld/</link>
      <guid>http://www.enheng.cc/201704/SpringBoot%E4%B9%8BHelloWorld/</guid>
      <pubDate>Sat, 08 Apr 2017 02:52:55 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;SpringBoot&quot;&gt;&lt;a href=&quot;#SpringBoot&quot; class=&quot;headerlink&quot; title=&quot;SpringBoot&quot;&gt;&lt;/a&gt;SpringBoot&lt;/h2&gt;&lt;p&gt;Spring 框架作为目前非常流行的一个 Java 应用开发框架，它所包含的内容是非常繁多的。Spring 框架包含几十个不同的子项目，涵盖应用开发的不同方面。要在这些子项目之间进行选择，并快速搭建一个可以运行的应用是比较困难的事情。Spring Boot 的目的在于快速创建可以独立运行的 Spring 应用。通过 Spring Boot 可以根据相应的模板快速创建应用并运行。Spring Boot 可以自动配置 Spring 的各种组件，并不依赖代码生成和 XML 配置文件。Spring Boot 可以大大提升使用 Spring 框架时的开发效率。&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a>SpringBoot</h2><p>Spring 框架作为目前非常流行的一个 Java 应用开发框架，它所包含的内容是非常繁多的。Spring 框架包含几十个不同的子项目，涵盖应用开发的不同方面。要在这些子项目之间进行选择，并快速搭建一个可以运行的应用是比较困难的事情。Spring Boot 的目的在于快速创建可以独立运行的 Spring 应用。通过 Spring Boot 可以根据相应的模板快速创建应用并运行。Spring Boot 可以自动配置 Spring 的各种组件，并不依赖代码生成和 XML 配置文件。Spring Boot 可以大大提升使用 Spring 框架时的开发效率。<br><a id="more"></a></p>
<h2 id="中心思想"><a href="#中心思想" class="headerlink" title="中心思想"></a>中心思想</h2><p>约定优于配置</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul>
<li>创建独立的Spring应用程序</li>
<li>直接嵌入 Tomcat 或 Jetty 服务器，不需要部署 WAR 文件。</li>
<li>提供推荐的基础 POM 文件来简化 Maven 配置。</li>
<li>尽可能的根据项目依赖来自动配置 Spring 框架。</li>
<li>提供可以直接在生产环境中使用的功能，如性能指标、应用信息和应用健康检查。</li>
<li>没有代码生成，也没有 XML 配置文件。</li>
</ul>
<h2 id="写一个HelloWorld"><a href="#写一个HelloWorld" class="headerlink" title="写一个HelloWorld"></a>写一个HelloWorld</h2><ol>
<li>创建一个maven项目</li>
<li><p>在pom.xml文件添加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;</div><div class="line">         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 </div><div class="line">		 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</div><div class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</div><div class="line"></div><div class="line">    &lt;groupId&gt;com.springboot&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;springboot&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</div><div class="line"></div><div class="line">    &lt;parent&gt;</div><div class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</div><div class="line">        &lt;version&gt;1.5.3.RELEASE&lt;/version&gt;</div><div class="line">    &lt;/parent&gt;</div><div class="line">    &lt;dependencies&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line">    &lt;/dependencies&gt;</div><div class="line">    </div><div class="line">&lt;/project&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>创建程序入口</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">package com.springboot;</div><div class="line"></div><div class="line">import org.springframework.boot.SpringApplication;</div><div class="line">import org.springframework.boot.autoconfigure.SpringBootApplication;</div><div class="line">import org.springframework.web.bind.annotation.RequestMapping;</div><div class="line">import org.springframework.web.bind.annotation.RestController;</div><div class="line"></div><div class="line">@RestController</div><div class="line">@SpringBootApplication</div><div class="line">public class Application &#123;</div><div class="line"></div><div class="line">    @RequestMapping(&quot;/&quot;)</div><div class="line">    String helloWorld() &#123;</div><div class="line">        return &quot;Hello World!&quot;;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static void main(String[] args) &#123;</div><div class="line">        SpringApplication.run(Application.class, args);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>见证奇迹的时刻<br>右击运行 Application 程序<br>浏览器输入:<a href="http://localhost:8080" target="_blank" rel="external">http://localhost:8080</a> 就会输出 Hello World!</p>
</li>
</ol>
]]></content:encoded>
      
      <comments>http://www.enheng.cc/201704/SpringBoot%E4%B9%8BHelloWorld/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Eclipse配置Maven仓库</title>
      <link>http://www.enheng.cc/201703/Eclipse%E9%85%8D%E7%BD%AEMaven%E4%BB%93%E5%BA%93/</link>
      <guid>http://www.enheng.cc/201703/Eclipse%E9%85%8D%E7%BD%AEMaven%E4%BB%93%E5%BA%93/</guid>
      <pubDate>Sat, 18 Mar 2017 15:00:16 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Why&quot;&gt;&lt;a href=&quot;#Why&quot; class=&quot;headerlink&quot; title=&quot;Why&quot;&gt;&lt;/a&gt;Why&lt;/h2&gt;&lt;p&gt;Eclipse有自带Maven仓库,但它配置的国外的Maven仓库。平时下载jar包的速度实在是太慢,还经常下不成功, 所以想配一个国内的Maven库。&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h2><p>Eclipse有自带Maven仓库,但它配置的国外的Maven仓库。平时下载jar包的速度实在是太慢,还经常下不成功, 所以想配一个国内的Maven库。<br><a id="more"></a></p>
<h2 id="How"><a href="#How" class="headerlink" title="How"></a>How</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>从<a href="http://maven.apache.org/download.cgi" target="_blank" rel="external">Apache官网</a>下载最新版的Maven，并解压到安装目录。</p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>配置阿里的Maven库,</p>
<h4 id="配置settings-xml"><a href="#配置settings-xml" class="headerlink" title="配置settings.xml"></a>配置settings.xml</h4><p>修改 conf 下的settings.xml:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">&lt;localRepository&gt;E:/Repository&lt;/localRepository&gt;</div><div class="line">&lt;profiles&gt;</div><div class="line">  &lt;profile&gt;</div><div class="line">	&lt;id&gt;Nexus aliyun&lt;/id&gt;</div><div class="line">	&lt;repositories&gt;</div><div class="line">	  &lt;repository&gt;</div><div class="line">		&lt;id&gt;Nexus aliyun&lt;/id&gt;</div><div class="line">		&lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</div><div class="line">		&lt;releases&gt;</div><div class="line">		   &lt;enabled&gt;true&lt;/enabled&gt;</div><div class="line">		&lt;/releases&gt;</div><div class="line">		&lt;snapshots&gt;</div><div class="line">		   &lt;enabled&gt;true&lt;/enabled&gt;</div><div class="line">		&lt;/snapshots&gt;</div><div class="line">	   &lt;/repository&gt;</div><div class="line">	&lt;/repositories&gt;</div><div class="line">	&lt;pluginRepositories&gt;</div><div class="line">		&lt;pluginRepository&gt;</div><div class="line">		  &lt;id&gt;Nexus aliyun&lt;/id&gt;</div><div class="line">		  &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</div><div class="line">		  &lt;releases&gt;</div><div class="line">			&lt;enabled&gt;true&lt;/enabled&gt;</div><div class="line">		  &lt;/releases&gt;</div><div class="line">		  &lt;snapshots&gt;</div><div class="line">			&lt;enabled&gt;true&lt;/enabled&gt;</div><div class="line">		  &lt;/snapshots&gt;</div><div class="line">		&lt;/pluginRepository&gt;</div><div class="line">	&lt;/pluginRepositories&gt;</div><div class="line">  &lt;/profile&gt;</div><div class="line">&lt;/profiles&gt;</div><div class="line">&lt;activeProfiles&gt;</div><div class="line">	&lt;activeProfile&gt;Nexus aliyun&lt;/activeProfile&gt;</div><div class="line">&lt;/activeProfiles&gt;</div></pre></td></tr></table></figure></p>
<h4 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h4><p>计算机右击属性-&gt;高级系统设置-&gt;环境变量<br>在系统变量下的Path添加 D:\develop\apache-maven-3.3.9\bin;</p>
<h4 id="配置Eclipse"><a href="#配置Eclipse" class="headerlink" title="配置Eclipse"></a>配置Eclipse</h4><p>  Window-&gt;Preferences-&gt;Maven-&gt;User Settings</p>
<p> <img src="https://upload-images.jianshu.io/upload_images/3612970-c948bcdff3afadc6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></p>
<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p> 从此之后妈妈再也不用担心我下载jar慢啦！！！</p>
]]></content:encoded>
      
      <comments>http://www.enheng.cc/201703/Eclipse%E9%85%8D%E7%BD%AEMaven%E4%BB%93%E5%BA%93/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
